{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","Notification","message","className","classes","defaultProps","Statistics","props","good","neutral","bad","total","positivePercentage","list","item","Good","Neutral","Bad","Total","FeedbackOptions","options","console","log","btnGood","type","name","onClick","btnNeutral","btnBad","Section","title","children","App","state","handlSetState","event","setState","prevState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11486198.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bad\":\"Statistics_Bad__1yR1X\",\"Neutral\":\"Statistics_Neutral__2swXB\",\"Good\":\"Statistics_Good__ythFp\",\"positivePercentage\":\"Statistics_positivePercentage__LC8zt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackOptions\":\"FeedbackOptions_FeedbackOptions__3fM8C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__3TP3H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notification\":\"Notification_Notification__3QRHp\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <div className={classes.Notification}>{message}</div>;\r\n};\r\nexport default Notification;\r\n\r\nNotification.defaultProps = {\r\n  message: 'No feedback given',\r\n};\r\nNotification.propTypes = { message: PropTypes.string };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './Statistics.module.css';\r\n\r\nconst Statistics = props => {\r\n  const { good, neutral, bad, total, positivePercentage } = props;\r\n  return (\r\n    <div className={classes.Statistics}>\r\n      <ul className={classes.list}>\r\n        <li className={classes.item}>\r\n          <p className={classes.Good}>Good: {good}</p>\r\n        </li>\r\n        <li className={classes.item}>\r\n          <p className={classes.Neutral}>Neutral: {neutral}</p>\r\n        </li>\r\n        <li className={classes.item}>\r\n          <p className={classes.Bad}>Bad: {bad}</p>\r\n        </li>\r\n        <li className={classes.item}>\r\n          <p className={classes.Total}>Total: {total}</p>\r\n        </li>\r\n        <li className={classes.item}>\r\n          <p className={classes.positivePercentage}>\r\n            Positive feedback: {positivePercentage}%\r\n          </p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport classes from './FeedbackOptions.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options }) => {\r\n  console.log(options);\r\n  return (\r\n    <section>\r\n      <div className={classes.FeedbackOptions}>\r\n        <button\r\n          className={classes.btnGood}\r\n          type=\"button\"\r\n          name=\"good\"\r\n          onClick={options}\r\n        >\r\n          Good\r\n        </button>\r\n        <button\r\n          className={classes.btnNeutral}\r\n          type=\"button\"\r\n          name=\"neutral\"\r\n          onClick={options}\r\n        >\r\n          Neutral\r\n        </button>\r\n        <button\r\n          className={classes.btnBad}\r\n          type=\"button\"\r\n          name=\"bad\"\r\n          onClick={options}\r\n        >\r\n          Bad\r\n        </button>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = { options: PropTypes.func };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './Section.module.css';\r\n\r\nconst Section = props => {\r\n  const { title, children } = props;\r\n  return (\r\n    <>\r\n      <section className={classes.Section}>\r\n        <h2 className={classes.title}>{title}</h2>\r\n        {children}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport Notification from './components/Notification/Notification.js';\nimport Statistics from './components/Statistics/Statistics.js';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions.js';\nimport Section from './components/Section/Section.js';\nimport './bases.css';\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  handlSetState = event => {\n    this.setState(prevState => ({\n      [event.target.name]: prevState[event.target.name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    let total = good + neutral + bad;\n    return total;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    let positivePercentage = Math.round(\n      (good / this.countTotalFeedback()) * 100,\n    );\n    return positivePercentage;\n  };\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions options={this.handlSetState} />\n        </Section>\n\n        <Section title=\"Statisticsk\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bases.css';\nimport App from './App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}